
[tkim058]_lab[1]_part[3].elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000178  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000124  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000178  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001a8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000001e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000838  00000000  00000000  00000208  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000079d  00000000  00000000  00000a40  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002bc  00000000  00000000  000011dd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  0000149c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000402  00000000  00000000  000014c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000ac  00000000  00000000  000018c2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  0000196e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	02 d0       	rcall	.+4      	; 0x9e <main>
  9a:	42 c0       	rjmp	.+132    	; 0x120 <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <main>:

  #include <avr/io.h>

  int main(void)
  {
  DDRA = 0x00; PORTA = 0xFF; // Configure port A's 8 pins as inputs
  9e:	11 b8       	out	0x01, r1	; 1
  a0:	8f ef       	ldi	r24, 0xFF	; 255
  a2:	82 b9       	out	0x02, r24	; 2
  //DDRB = 0xFF; PORTB = 0x00; // Configure port B's 8 pins as outputs,
  DDRC = 0xFF; PORTC = 0x00;
  a4:	87 b9       	out	0x07, r24	; 7
  a6:	18 b8       	out	0x08, r1	; 8
  // initialize to 0s
  //unsigned char tmpB = 0x00; 	// Temporary variable to hold the value of B
  unsigned char p1 = 0x0000; // Temporary variable to hold the value of A
  unsigned char cntavail = 0;
  a8:	20 e0       	ldi	r18, 0x00	; 0
  {
  
  p1 = PINA & 0x0F;
  if ((p1 == 0x01) || (p1 == 0x02) || (p1 == 0x04) || (p1 == 0x08))
  {
  cntavail = 0x03;
  aa:	33 e0       	ldi	r19, 0x03	; 3
  }
  else if((p1 == 0x03) || (p1 == 0x05) || (p1 == 0x06) || (p1 == 0x09) || (p1 == 0x0A) || (p1 == 0x0C))
  {
  cntavail = 0x02;
  ac:	42 e0       	ldi	r20, 0x02	; 2
  }
  else if((p1 == 0x07) || (p1 == 0x0B) || (p1 == 0x0E) || (p1 == 0x0D))
  {
  cntavail = 0x01;
  ae:	51 e0       	ldi	r21, 0x01	; 1
  }
  else if(p1 == 0x0F)
  {
  cntavail = 0x80;
  b0:	60 e8       	ldi	r22, 0x80	; 128
  unsigned char p1 = 0x0000; // Temporary variable to hold the value of A
  unsigned char cntavail = 0;
  while(1)
  {
  
  p1 = PINA & 0x0F;
  b2:	80 b1       	in	r24, 0x00	; 0
  b4:	8f 70       	andi	r24, 0x0F	; 15
  if ((p1 == 0x01) || (p1 == 0x02) || (p1 == 0x04) || (p1 == 0x08))
  b6:	9f ef       	ldi	r25, 0xFF	; 255
  b8:	98 0f       	add	r25, r24
  ba:	92 30       	cpi	r25, 0x02	; 2
  bc:	e0 f0       	brcs	.+56     	; 0xf6 <main+0x58>
  be:	84 30       	cpi	r24, 0x04	; 4
  c0:	e1 f0       	breq	.+56     	; 0xfa <main+0x5c>
  c2:	88 30       	cpi	r24, 0x08	; 8
  c4:	e1 f0       	breq	.+56     	; 0xfe <main+0x60>
  {
  cntavail = 0x03;
  }
  else if((p1 == 0x03) || (p1 == 0x05) || (p1 == 0x06) || (p1 == 0x09) || (p1 == 0x0A) || (p1 == 0x0C))
  c6:	83 30       	cpi	r24, 0x03	; 3
  c8:	e1 f0       	breq	.+56     	; 0x102 <main+0x64>
  ca:	9b ef       	ldi	r25, 0xFB	; 251
  cc:	98 0f       	add	r25, r24
  ce:	92 30       	cpi	r25, 0x02	; 2
  d0:	d0 f0       	brcs	.+52     	; 0x106 <main+0x68>
  d2:	97 ef       	ldi	r25, 0xF7	; 247
  d4:	98 0f       	add	r25, r24
  d6:	92 30       	cpi	r25, 0x02	; 2
  d8:	c0 f0       	brcs	.+48     	; 0x10a <main+0x6c>
  da:	8c 30       	cpi	r24, 0x0C	; 12
  dc:	c1 f0       	breq	.+48     	; 0x10e <main+0x70>
  {
  cntavail = 0x02;
  }
  else if((p1 == 0x07) || (p1 == 0x0B) || (p1 == 0x0E) || (p1 == 0x0D))
  de:	87 30       	cpi	r24, 0x07	; 7
  e0:	c1 f0       	breq	.+48     	; 0x112 <main+0x74>
  e2:	8b 30       	cpi	r24, 0x0B	; 11
  e4:	c1 f0       	breq	.+48     	; 0x116 <main+0x78>
  e6:	93 ef       	ldi	r25, 0xF3	; 243
  e8:	98 0f       	add	r25, r24
  ea:	92 30       	cpi	r25, 0x02	; 2
  ec:	b0 f0       	brcs	.+44     	; 0x11a <main+0x7c>
  {
  cntavail = 0x01;
  }
  else if(p1 == 0x0F)
  ee:	8f 30       	cpi	r24, 0x0F	; 15
  f0:	a9 f4       	brne	.+42     	; 0x11c <main+0x7e>
  {
  cntavail = 0x80;
  f2:	26 2f       	mov	r18, r22
  f4:	13 c0       	rjmp	.+38     	; 0x11c <main+0x7e>
  {
  
  p1 = PINA & 0x0F;
  if ((p1 == 0x01) || (p1 == 0x02) || (p1 == 0x04) || (p1 == 0x08))
  {
  cntavail = 0x03;
  f6:	23 2f       	mov	r18, r19
  f8:	11 c0       	rjmp	.+34     	; 0x11c <main+0x7e>
  fa:	23 2f       	mov	r18, r19
  fc:	0f c0       	rjmp	.+30     	; 0x11c <main+0x7e>
  fe:	23 2f       	mov	r18, r19
 100:	0d c0       	rjmp	.+26     	; 0x11c <main+0x7e>
  }
  else if((p1 == 0x03) || (p1 == 0x05) || (p1 == 0x06) || (p1 == 0x09) || (p1 == 0x0A) || (p1 == 0x0C))
  {
  cntavail = 0x02;
 102:	24 2f       	mov	r18, r20
 104:	0b c0       	rjmp	.+22     	; 0x11c <main+0x7e>
 106:	24 2f       	mov	r18, r20
 108:	09 c0       	rjmp	.+18     	; 0x11c <main+0x7e>
 10a:	24 2f       	mov	r18, r20
 10c:	07 c0       	rjmp	.+14     	; 0x11c <main+0x7e>
 10e:	24 2f       	mov	r18, r20
 110:	05 c0       	rjmp	.+10     	; 0x11c <main+0x7e>
  }
  else if((p1 == 0x07) || (p1 == 0x0B) || (p1 == 0x0E) || (p1 == 0x0D))
  {
  cntavail = 0x01;
 112:	25 2f       	mov	r18, r21
 114:	03 c0       	rjmp	.+6      	; 0x11c <main+0x7e>
 116:	25 2f       	mov	r18, r21
 118:	01 c0       	rjmp	.+2      	; 0x11c <main+0x7e>
 11a:	25 2f       	mov	r18, r21
  }
  else if(p1 == 0x0F)
  {
  cntavail = 0x80;
  }
  PORTC = cntavail;
 11c:	28 b9       	out	0x08, r18	; 8
  }
 11e:	c9 cf       	rjmp	.-110    	; 0xb2 <main+0x14>

00000120 <_exit>:
 120:	f8 94       	cli

00000122 <__stop_program>:
 122:	ff cf       	rjmp	.-2      	; 0x122 <__stop_program>
